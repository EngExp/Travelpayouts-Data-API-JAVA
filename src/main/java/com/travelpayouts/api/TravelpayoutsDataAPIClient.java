/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api;

import com.travelpayouts.api.controllers.*;
import com.travelpayouts.api.http.client.HttpClient;

public class TravelpayoutsDataAPIClient {
    /**
     * Singleton access to TravelpayoutsDataAPI controller
     * @return	Returns the TravelpayoutsDataAPIController instance 
     */
    public TravelpayoutsDataAPIController getTravelpayoutsDataAPI() {
        return TravelpayoutsDataAPIController.getInstance();
    }

    /**
     * Singleton access to ThePricesForTheAirlineTickets controller
     * @return	Returns the ThePricesForTheAirlineTicketsController instance 
     */
    public ThePricesForTheAirlineTicketsController getThePricesForTheAirlineTickets() {
        return ThePricesForTheAirlineTicketsController.getInstance();
    }

    /**
     * Singleton access to NonStopTickets controller
     * @return	Returns the NonStopTicketsController instance 
     */
    public NonStopTicketsController getNonStopTickets() {
        return NonStopTicketsController.getInstance();
    }

    /**
     * Singleton access to PopularAirlineRoutes controller
     * @return	Returns the PopularAirlineRoutesController instance 
     */
    public PopularAirlineRoutesController getPopularAirlineRoutes() {
        return PopularAirlineRoutesController.getInstance();
    }

    /**
     * Singleton access to ThePopularDirectionsFromACity controller
     * @return	Returns the ThePopularDirectionsFromACityController instance 
     */
    public ThePopularDirectionsFromACityController getThePopularDirectionsFromACity() {
        return ThePopularDirectionsFromACityController.getInstance();
    }

    /**
     * Singleton access to DataOnTheRoutesInJsonFormat controller
     * @return	Returns the DataOnTheRoutesInJsonFormatController instance 
     */
    public DataOnTheRoutesInJsonFormatController getDataOnTheRoutesInJsonFormat() {
        return DataOnTheRoutesInJsonFormatController.getInstance();
    }

    /**
     * Singleton access to ThePricesForTheAlternativeDirections controller
     * @return	Returns the ThePricesForTheAlternativeDirectionsController instance 
     */
    public ThePricesForTheAlternativeDirectionsController getThePricesForTheAlternativeDirections() {
        return ThePricesForTheAlternativeDirectionsController.getInstance();
    }

    /**
     * Singleton access to TheCalendarOfPricesForAWeek controller
     * @return	Returns the TheCalendarOfPricesForAWeekController instance 
     */
    public TheCalendarOfPricesForAWeekController getTheCalendarOfPricesForAWeek() {
        return TheCalendarOfPricesForAWeekController.getInstance();
    }

    /**
     * Singleton access to CheapestTickets controller
     * @return	Returns the CheapestTicketsController instance 
     */
    public CheapestTicketsController getCheapestTickets() {
        return CheapestTicketsController.getInstance();
    }

    /**
     * Singleton access to TicketsForEachDayOfMonth controller
     * @return	Returns the TicketsForEachDayOfMonthController instance 
     */
    public TicketsForEachDayOfMonthController getTicketsForEachDayOfMonth() {
        return TicketsForEachDayOfMonthController.getInstance();
    }

    /**
     * Singleton access to DataOfCountriesInJsonFormat controller
     * @return	Returns the DataOfCountriesInJsonFormatController instance 
     */
    public DataOfCountriesInJsonFormatController getDataOfCountriesInJsonFormat() {
        return DataOfCountriesInJsonFormatController.getInstance();
    }

    /**
     * Singleton access to CityDataInJsonFormat controller
     * @return	Returns the CityDataInJsonFormatController instance 
     */
    public CityDataInJsonFormatController getCityDataInJsonFormat() {
        return CityDataInJsonFormatController.getInstance();
    }

    /**
     * Singleton access to AirportDataInJsonFormat controller
     * @return	Returns the AirportDataInJsonFormatController instance 
     */
    public AirportDataInJsonFormatController getAirportDataInJsonFormat() {
        return AirportDataInJsonFormatController.getInstance();
    }

    /**
     * Singleton access to AirlineDataInJsonFormat controller
     * @return	Returns the AirlineDataInJsonFormatController instance 
     */
    public AirlineDataInJsonFormatController getAirlineDataInJsonFormat() {
        return AirlineDataInJsonFormatController.getInstance();
    }

    /**
     * Singleton access to AllianceDataInJsonFormat controller
     * @return	Returns the AllianceDataInJsonFormatController instance 
     */
    public AllianceDataInJsonFormatController getAllianceDataInJsonFormat() {
        return AllianceDataInJsonFormatController.getInstance();
    }

    /**
     * Singleton access to AirplaneDataInJsonFormat controller
     * @return	Returns the AirplaneDataInJsonFormatController instance 
     */
    public AirplaneDataInJsonFormatController getAirplaneDataInJsonFormat() {
        return AirplaneDataInJsonFormatController.getInstance();
    }

    /**
     * Singleton access to TheCalendarOfPricesForAMonth controller
     * @return	Returns the TheCalendarOfPricesForAMonthController instance 
     */
    public TheCalendarOfPricesForAMonthController getTheCalendarOfPricesForAMonth() {
        return TheCalendarOfPricesForAMonthController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public TravelpayoutsDataAPIClient() {	
        Configuration.xAccessToken = "af9512dd115b1081290b9ca7f0d418a2";
	}

    /**
     * Client initialization constructor 
     */     
    public TravelpayoutsDataAPIClient(String xAccessToken, String oAuthToken, String oAuthTokenSecret, String oAuthClientId, String oAuthClientSecret) {
        this();
        if(xAccessToken != null) Configuration.xAccessToken = xAccessToken;
        Configuration.oAuthToken = oAuthToken;
        Configuration.oAuthTokenSecret = oAuthTokenSecret;
        Configuration.oAuthClientId = oAuthClientId;
        Configuration.oAuthClientSecret = oAuthClientSecret;
    }
}