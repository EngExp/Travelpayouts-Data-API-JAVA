/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;

public class GetCheapestTicketsInputBuilder {
    //the instance to build
    private GetCheapestTicketsInput getCheapestTicketsInput;

    /**
     * Default constructor to initialize the instance
     */
    public GetCheapestTicketsInputBuilder() {
        getCheapestTicketsInput = new GetCheapestTicketsInput();
    }

    /**
     * Currency of prices
     */
    public GetCheapestTicketsInputBuilder currency(String currency) {
        getCheapestTicketsInput.setCurrency(currency);
        return this;
    }

    /**
     * IATA code of the departure city. IATA code is shown by uppercase letters,
     */
    public GetCheapestTicketsInputBuilder origin(String origin) {
        getCheapestTicketsInput.setOrigin(origin);
        return this;
    }

    /**
     * IATA code of the destination city (for all routes, enter "-"). IATA code is shown by uppercase letters
     */
    public GetCheapestTicketsInputBuilder destination(String destination) {
        getCheapestTicketsInput.setDestination(destination);
        return this;
    }

    /**
     * Day or month of departure (yyyy-mm-dd or yyyy-mm).
     */
    public GetCheapestTicketsInputBuilder departDate(Date departDate) {
        getCheapestTicketsInput.setDepartDate(departDate);
        return this;
    }

    /**
     * Day or month of return (yyyy-mm-dd or yyyy-mm).
     */
    public GetCheapestTicketsInputBuilder returnDate(Date returnDate) {
        getCheapestTicketsInput.setReturnDate(returnDate);
        return this;
    }

    /**
     * Is used to display the found data (by default the page displays 100 found prices. If the destination isn't selected, there can be more data. In this case, use the page, to display the next set of data, for example, page=2).
     */
    public GetCheapestTicketsInputBuilder page(String page) {
        getCheapestTicketsInput.setPage(page);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GetCheapestTicketsInput build() {
        return getCheapestTicketsInput;
    }
}