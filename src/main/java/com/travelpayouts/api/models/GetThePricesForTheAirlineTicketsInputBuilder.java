/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;

public class GetThePricesForTheAirlineTicketsInputBuilder {
    //the instance to build
    private GetThePricesForTheAirlineTicketsInput getThePricesForTheAirlineTicketsInput;

    /**
     * Default constructor to initialize the instance
     */
    public GetThePricesForTheAirlineTicketsInputBuilder() {
        getThePricesForTheAirlineTicketsInput = new GetThePricesForTheAirlineTicketsInput();
    }

    /**
     * the airline tickets currency
     */
    public GetThePricesForTheAirlineTicketsInputBuilder currency(String currency) {
        getThePricesForTheAirlineTicketsInput.setCurrency(currency);
        return this;
    }

    /**
     * the point of departure. The IATA city code or the country code
     */
    public GetThePricesForTheAirlineTicketsInputBuilder origin(String origin) {
        getThePricesForTheAirlineTicketsInput.setOrigin(origin);
        return this;
    }

    /**
     * the point of destination. The IATA city code or the country code
     */
    public GetThePricesForTheAirlineTicketsInputBuilder destination(String destination) {
        getThePricesForTheAirlineTicketsInput.setDestination(destination);
        return this;
    }

    /**
     * the beginning of the period, within which the dates of departure fall (in the YYYY-MM-DD format, for example, 2016-05-01). Must be specified if period_type is equal to month
     */
    public GetThePricesForTheAirlineTicketsInputBuilder beginningOfPeriod(Date beginningOfPeriod) {
        getThePricesForTheAirlineTicketsInput.setBeginningOfPeriod(beginningOfPeriod);
        return this;
    }

    /**
     * the period, for which the tickets have been found (the required parameter)
     */
    public GetThePricesForTheAirlineTicketsInputBuilder periodType(String periodType) {
        getThePricesForTheAirlineTicketsInput.setPeriodType(periodType);
        return this;
    }

    /**
     * a page number
     */
    public GetThePricesForTheAirlineTicketsInputBuilder page(double page) {
        getThePricesForTheAirlineTicketsInput.setPage(page);
        return this;
    }

    /**
     * the total number of records on a page. The maximum value — 1000
     */
    public GetThePricesForTheAirlineTicketsInputBuilder limit(double limit) {
        getThePricesForTheAirlineTicketsInput.setLimit(limit);
        return this;
    }

    /**
     * the length of stay in weeks or days (for period_type=day)
     */
    public GetThePricesForTheAirlineTicketsInputBuilder tripDuration(String tripDuration) {
        getThePricesForTheAirlineTicketsInput.setTripDuration(tripDuration);
        return this;
    }

    /**
     * true — one way, false — back-to-back.
     */
    public GetThePricesForTheAirlineTicketsInputBuilder oneWay(Boolean oneWay) {
        getThePricesForTheAirlineTicketsInput.setOneWay(oneWay);
        return this;
    }

    /**
     * false — all the prices, true — just the prices, found using the partner marker (recommended)
     */
    public GetThePricesForTheAirlineTicketsInputBuilder showToAffiliates(Boolean showToAffiliates) {
        getThePricesForTheAirlineTicketsInput.setShowToAffiliates(showToAffiliates);
        return this;
    }

    /**
     * the assorting of prices. price — by the price (the default value). For the directions city — city assorting by the price is possible only; route — by the popularity of a route; distance_unit_price — by the price for 1 km.
     */
    public GetThePricesForTheAirlineTicketsInputBuilder sorting(String sorting) {
        getThePricesForTheAirlineTicketsInput.setSorting(sorting);
        return this;
    }

    /**
     * trip_class. 0 — The economy class (the default value); 1 — The business class; 2 — The first class.
     */
    public GetThePricesForTheAirlineTicketsInputBuilder tripClass(String tripClass) {
        getThePricesForTheAirlineTicketsInput.setTripClass(tripClass);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GetThePricesForTheAirlineTicketsInput build() {
        return getThePricesForTheAirlineTicketsInput;
    }
}