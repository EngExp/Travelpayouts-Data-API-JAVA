/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;

public class GetTicketsForEachDayOfMonthInputBuilder {
    //the instance to build
    private GetTicketsForEachDayOfMonthInput getTicketsForEachDayOfMonthInput;

    /**
     * Default constructor to initialize the instance
     */
    public GetTicketsForEachDayOfMonthInputBuilder() {
        getTicketsForEachDayOfMonthInput = new GetTicketsForEachDayOfMonthInput();
    }

    /**
     * currency of prices
     */
    public GetTicketsForEachDayOfMonthInputBuilder currency(String currency) {
        getTicketsForEachDayOfMonthInput.setCurrency(currency);
        return this;
    }

    /**
     * IATA code of departure city. IATA code is shown by uppercase letters, for example MOW
     */
    public GetTicketsForEachDayOfMonthInputBuilder origin(String origin) {
        getTicketsForEachDayOfMonthInput.setOrigin(origin);
        return this;
    }

    /**
     * IATA code of destination city. IATA code is shown by uppercase letters, for example LED
     */
    public GetTicketsForEachDayOfMonthInputBuilder destination(String destination) {
        getTicketsForEachDayOfMonthInput.setDestination(destination);
        return this;
    }

    /**
     * day or month of departure (yyyy-mm-dd or yyyy-mm)
     */
    public GetTicketsForEachDayOfMonthInputBuilder departDate(Date departDate) {
        getTicketsForEachDayOfMonthInput.setDepartDate(departDate);
        return this;
    }

    /**
     * field used to build the calendar. Equal to either: departure_date or return_date
     */
    public GetTicketsForEachDayOfMonthInputBuilder calendarType(String calendarType) {
        getTicketsForEachDayOfMonthInput.setCalendarType(calendarType);
        return this;
    }

    /**
     * day or month of return (yyyy-mm-dd or yyyy-mm). Pay attention! If the return_date is not specified, you will get the "One way" flights
     */
    public GetTicketsForEachDayOfMonthInputBuilder returnDate(String returnDate) {
        getTicketsForEachDayOfMonthInput.setReturnDate(returnDate);
        return this;
    }

    /**
     * length of stay in the destination city
     */
    public GetTicketsForEachDayOfMonthInputBuilder length(String length) {
        getTicketsForEachDayOfMonthInput.setLength(length);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GetTicketsForEachDayOfMonthInput build() {
        return getTicketsForEachDayOfMonthInput;
    }
}