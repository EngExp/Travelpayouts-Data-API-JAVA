/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;

public class DataOnTheRoutesInJsonFormatModelBuilder {
    //the instance to build
    private DataOnTheRoutesInJsonFormatModel dataOnTheRoutesInJsonFormatModel;

    /**
     * Default constructor to initialize the instance
     */
    public DataOnTheRoutesInJsonFormatModelBuilder() {
        dataOnTheRoutesInJsonFormatModel = new DataOnTheRoutesInJsonFormatModel();
    }

    /**
     * IATA of airline
     */
    public DataOnTheRoutesInJsonFormatModelBuilder airlineIata(String airlineIata) {
        dataOnTheRoutesInJsonFormatModel.setAirlineIata(airlineIata);
        return this;
    }

    /**
     * ICAO of airline
     */
    public DataOnTheRoutesInJsonFormatModelBuilder airlineIcao(String airlineIcao) {
        dataOnTheRoutesInJsonFormatModel.setAirlineIcao(airlineIcao);
        return this;
    }

    /**
     * IATA of airport of departure
     */
    public DataOnTheRoutesInJsonFormatModelBuilder departureAirportIata(String departureAirportIata) {
        dataOnTheRoutesInJsonFormatModel.setDepartureAirportIata(departureAirportIata);
        return this;
    }

    /**
     * ICAO of airport of departure
     */
    public DataOnTheRoutesInJsonFormatModelBuilder departureAirportIcao(String departureAirportIcao) {
        dataOnTheRoutesInJsonFormatModel.setDepartureAirportIcao(departureAirportIcao);
        return this;
    }

    /**
     * IATA of airport of arrival
     */
    public DataOnTheRoutesInJsonFormatModelBuilder arrivalAirportIata(String arrivalAirportIata) {
        dataOnTheRoutesInJsonFormatModel.setArrivalAirportIata(arrivalAirportIata);
        return this;
    }

    /**
     * ICAO of airport of arrival
     */
    public DataOnTheRoutesInJsonFormatModelBuilder arrivalAirportIcao(String arrivalAirportIcao) {
        dataOnTheRoutesInJsonFormatModel.setArrivalAirportIcao(arrivalAirportIcao);
        return this;
    }

    /**
     * it shows whether the flight performs the same company that sells the ticket
     */
    public DataOnTheRoutesInJsonFormatModelBuilder codeshare(boolean codeshare) {
        dataOnTheRoutesInJsonFormatModel.setCodeshare(codeshare);
        return this;
    }

    /**
     * the number of direct
     */
    public DataOnTheRoutesInJsonFormatModelBuilder transfers(int transfers) {
        dataOnTheRoutesInJsonFormatModel.setTransfers(transfers);
        return this;
    }

    /**
     * IATA of airplane
     */
    public DataOnTheRoutesInJsonFormatModelBuilder planes(List<String> planes) {
        dataOnTheRoutesInJsonFormatModel.setPlanes(planes);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public DataOnTheRoutesInJsonFormatModel build() {
        return dataOnTheRoutesInJsonFormatModel;
    }
}