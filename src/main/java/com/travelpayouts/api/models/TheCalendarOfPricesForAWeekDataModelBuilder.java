/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;

public class TheCalendarOfPricesForAWeekDataModelBuilder 
        extends TheCalendarOfPricesForAWeekModelBuilder {
    //the instance to build
    private TheCalendarOfPricesForAWeekDataModel theCalendarOfPricesForAWeekDataModel;

    /**
     * Default constructor to initialize the instance
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder() {
        theCalendarOfPricesForAWeekDataModel = new TheCalendarOfPricesForAWeekDataModel();
    }

    /**
     * false - all the prices, true - just the prices, found using the partner marker (recommended)
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder showToAffiliates(boolean showToAffiliates) {
        theCalendarOfPricesForAWeekDataModel.setShowToAffiliates(showToAffiliates);
        return this;
    }

    /**
     * the flight class. 0 — the economy class, 1 — the business class, 2 — the first class.
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder tripClass(int tripClass) {
        theCalendarOfPricesForAWeekDataModel.setTripClass(tripClass);
        return this;
    }

    /**
     * the point of departure
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder origin(String origin) {
        theCalendarOfPricesForAWeekDataModel.setOrigin(origin);
        return this;
    }

    /**
     * the point of destination
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder destination(String destination) {
        theCalendarOfPricesForAWeekDataModel.setDestination(destination);
        return this;
    }

    /**
     * the date of departure
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder departDate(String departDate) {
        theCalendarOfPricesForAWeekDataModel.setDepartDate(departDate);
        return this;
    }

    /**
     * the date of return
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder returnDate(String returnDate) {
        theCalendarOfPricesForAWeekDataModel.setReturnDate(returnDate);
        return this;
    }

    /**
     * the number of transfers
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder numberOfChanges(int numberOfChanges) {
        theCalendarOfPricesForAWeekDataModel.setNumberOfChanges(numberOfChanges);
        return this;
    }

    /**
     * the cost of a flight, in the currency specified
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder value(double value) {
        theCalendarOfPricesForAWeekDataModel.setValue(value);
        return this;
    }

    /**
     * the time and the date, for which a ticket was found
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder foundAt(String foundAt) {
        theCalendarOfPricesForAWeekDataModel.setFoundAt(foundAt);
        return this;
    }

    /**
     * the distance between the point of departure and the point of destination
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder distance(int distance) {
        theCalendarOfPricesForAWeekDataModel.setDistance(distance);
        return this;
    }

    /**
     * the actuality of an offer
     */
    public TheCalendarOfPricesForAWeekDataModelBuilder actual(boolean actual) {
        theCalendarOfPricesForAWeekDataModel.setActual(actual);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public TheCalendarOfPricesForAWeekDataModel build() {
        return theCalendarOfPricesForAWeekDataModel;
    }
}