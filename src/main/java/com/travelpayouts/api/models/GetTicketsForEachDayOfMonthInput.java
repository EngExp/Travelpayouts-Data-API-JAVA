/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class GetTicketsForEachDayOfMonthInput 
        implements java.io.Serializable {
    private static final long serialVersionUID = 4926568615683967795L;
    private String currency = "RUB";
    private String origin = "MOW";
    private String destination = "LED";
    private Date departDate;
    private String calendarType = "departure_date";
    private String returnDate;
    private String length;
    /** GETTER
     * currency of prices
     */
    @JsonGetter("currency")
    public String getCurrency ( ) { 
        return this.currency;
    }
    
    /** SETTER
     * currency of prices
     */
    @JsonSetter("currency")
    public void setCurrency (String value) { 
        this.currency = value;
    }
 
    /** GETTER
     * IATA code of departure city. IATA code is shown by uppercase letters, for example MOW
     */
    @JsonGetter("origin")
    public String getOrigin ( ) { 
        return this.origin;
    }
    
    /** SETTER
     * IATA code of departure city. IATA code is shown by uppercase letters, for example MOW
     */
    @JsonSetter("origin")
    public void setOrigin (String value) { 
        this.origin = value;
    }
 
    /** GETTER
     * IATA code of destination city. IATA code is shown by uppercase letters, for example LED
     */
    @JsonGetter("destination")
    public String getDestination ( ) { 
        return this.destination;
    }
    
    /** SETTER
     * IATA code of destination city. IATA code is shown by uppercase letters, for example LED
     */
    @JsonSetter("destination")
    public void setDestination (String value) { 
        this.destination = value;
    }
 
    /** GETTER
     * day or month of departure (yyyy-mm-dd or yyyy-mm)
     */
    @JsonGetter("depart_date")
    public Date getDepartDate ( ) { 
        return this.departDate;
    }
    
    /** SETTER
     * day or month of departure (yyyy-mm-dd or yyyy-mm)
     */
    @JsonSetter("depart_date")
    public void setDepartDate (Date value) { 
        this.departDate = value;
    }
 
    /** GETTER
     * field used to build the calendar. Equal to either: departure_date or return_date
     */
    @JsonGetter("calendar_type")
    public String getCalendarType ( ) { 
        return this.calendarType;
    }
    
    /** SETTER
     * field used to build the calendar. Equal to either: departure_date or return_date
     */
    @JsonSetter("calendar_type")
    public void setCalendarType (String value) { 
        this.calendarType = value;
    }
 
    /** GETTER
     * day or month of return (yyyy-mm-dd or yyyy-mm). Pay attention! If the return_date is not specified, you will get the "One way" flights
     */
    @JsonGetter("return_date")
    public String getReturnDate ( ) { 
        return this.returnDate;
    }
    
    /** SETTER
     * day or month of return (yyyy-mm-dd or yyyy-mm). Pay attention! If the return_date is not specified, you will get the "One way" flights
     */
    @JsonSetter("return_date")
    public void setReturnDate (String value) { 
        this.returnDate = value;
    }
 
    /** GETTER
     * length of stay in the destination city
     */
    @JsonGetter("length")
    public String getLength ( ) { 
        return this.length;
    }
    
    /** SETTER
     * length of stay in the destination city
     */
    @JsonSetter("length")
    public void setLength (String value) { 
        this.length = value;
    }
 
}
 