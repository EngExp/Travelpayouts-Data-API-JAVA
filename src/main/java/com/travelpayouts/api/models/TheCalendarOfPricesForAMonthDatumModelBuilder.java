/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;

public class TheCalendarOfPricesForAMonthDatumModelBuilder 
        extends TheCalendarOfPricesForAMonthModelBuilder {
    //the instance to build
    private TheCalendarOfPricesForAMonthDatumModel theCalendarOfPricesForAMonthDatumModel;

    /**
     * Default constructor to initialize the instance
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder() {
        theCalendarOfPricesForAMonthDatumModel = new TheCalendarOfPricesForAMonthDatumModel();
    }

    /**
     * false - all the prices, true - just the prices, found using the partner marker (recommended)
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder showToAffiliates(boolean showToAffiliates) {
        theCalendarOfPricesForAMonthDatumModel.setShowToAffiliates(showToAffiliates);
        return this;
    }

    /**
     * the flight class. 0 — the economy class, 1 — the business class, 2 — the first class.
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder tripClass(int tripClass) {
        theCalendarOfPricesForAMonthDatumModel.setTripClass(tripClass);
        return this;
    }

    /**
     * the point of departure
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder origin(String origin) {
        theCalendarOfPricesForAMonthDatumModel.setOrigin(origin);
        return this;
    }

    /**
     * the point of destination
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder destination(String destination) {
        theCalendarOfPricesForAMonthDatumModel.setDestination(destination);
        return this;
    }

    /**
     * the date of departure
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder departDate(String departDate) {
        theCalendarOfPricesForAMonthDatumModel.setDepartDate(departDate);
        return this;
    }

    /**
     * the date of return
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder returnDate(String returnDate) {
        theCalendarOfPricesForAMonthDatumModel.setReturnDate(returnDate);
        return this;
    }

    /**
     * the number of transfers
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder numberOfChanges(int numberOfChanges) {
        theCalendarOfPricesForAMonthDatumModel.setNumberOfChanges(numberOfChanges);
        return this;
    }

    /**
     * the cost of a flight, in the currency specified
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder value(int value) {
        theCalendarOfPricesForAMonthDatumModel.setValue(value);
        return this;
    }

    /**
     * the time and the date, for which a ticket was found
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder foundAt(String foundAt) {
        theCalendarOfPricesForAMonthDatumModel.setFoundAt(foundAt);
        return this;
    }

    /**
     * the distance between the point of departure and the point of destination
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder distance(int distance) {
        theCalendarOfPricesForAMonthDatumModel.setDistance(distance);
        return this;
    }

    /**
     * the actuality of an offer
     */
    public TheCalendarOfPricesForAMonthDatumModelBuilder actual(boolean actual) {
        theCalendarOfPricesForAMonthDatumModel.setActual(actual);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public TheCalendarOfPricesForAMonthDatumModel build() {
        return theCalendarOfPricesForAMonthDatumModel;
    }
}