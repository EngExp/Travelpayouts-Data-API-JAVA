/*
 * TravelpayoutsDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/03/2016
 */
package com.travelpayouts.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class GetThePricesForTheAirlineTicketsInput 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5101037829412138355L;
    private String currency = "RUB";
    private String origin;
    private String destination;
    private Date beginningOfPeriod;
    private String periodType = "'year'";
    private double page = 1d;
    private double limit = 30d;
    private String tripDuration;
    private Boolean oneWay = false;
    private Boolean showToAffiliates = true;
    private String sorting = "price";
    private String tripClass = "0";
    /** GETTER
     * the airline tickets currency
     */
    @JsonGetter("currency")
    public String getCurrency ( ) { 
        return this.currency;
    }
    
    /** SETTER
     * the airline tickets currency
     */
    @JsonSetter("currency")
    public void setCurrency (String value) { 
        this.currency = value;
    }
 
    /** GETTER
     * the point of departure. The IATA city code or the country code
     */
    @JsonGetter("origin")
    public String getOrigin ( ) { 
        return this.origin;
    }
    
    /** SETTER
     * the point of departure. The IATA city code or the country code
     */
    @JsonSetter("origin")
    public void setOrigin (String value) { 
        this.origin = value;
    }
 
    /** GETTER
     * the point of destination. The IATA city code or the country code
     */
    @JsonGetter("destination")
    public String getDestination ( ) { 
        return this.destination;
    }
    
    /** SETTER
     * the point of destination. The IATA city code or the country code
     */
    @JsonSetter("destination")
    public void setDestination (String value) { 
        this.destination = value;
    }
 
    /** GETTER
     * the beginning of the period, within which the dates of departure fall (in the YYYY-MM-DD format, for example, 2016-05-01). Must be specified if period_type is equal to month
     */
    @JsonGetter("beginning_of_period")
    public Date getBeginningOfPeriod ( ) { 
        return this.beginningOfPeriod;
    }
    
    /** SETTER
     * the beginning of the period, within which the dates of departure fall (in the YYYY-MM-DD format, for example, 2016-05-01). Must be specified if period_type is equal to month
     */
    @JsonSetter("beginning_of_period")
    public void setBeginningOfPeriod (Date value) { 
        this.beginningOfPeriod = value;
    }
 
    /** GETTER
     * the period, for which the tickets have been found (the required parameter)
     */
    @JsonGetter("period_type")
    public String getPeriodType ( ) { 
        return this.periodType;
    }
    
    /** SETTER
     * the period, for which the tickets have been found (the required parameter)
     */
    @JsonSetter("period_type")
    public void setPeriodType (String value) { 
        this.periodType = value;
    }
 
    /** GETTER
     * a page number
     */
    @JsonGetter("page")
    public double getPage ( ) { 
        return this.page;
    }
    
    /** SETTER
     * a page number
     */
    @JsonSetter("page")
    public void setPage (double value) { 
        this.page = value;
    }
 
    /** GETTER
     * the total number of records on a page. The maximum value — 1000
     */
    @JsonGetter("limit")
    public double getLimit ( ) { 
        return this.limit;
    }
    
    /** SETTER
     * the total number of records on a page. The maximum value — 1000
     */
    @JsonSetter("limit")
    public void setLimit (double value) { 
        this.limit = value;
    }
 
    /** GETTER
     * the length of stay in weeks or days (for period_type=day)
     */
    @JsonGetter("trip_duration")
    public String getTripDuration ( ) { 
        return this.tripDuration;
    }
    
    /** SETTER
     * the length of stay in weeks or days (for period_type=day)
     */
    @JsonSetter("trip_duration")
    public void setTripDuration (String value) { 
        this.tripDuration = value;
    }
 
    /** GETTER
     * true — one way, false — back-to-back.
     */
    @JsonGetter("one_way")
    public Boolean getOneWay ( ) { 
        return this.oneWay;
    }
    
    /** SETTER
     * true — one way, false — back-to-back.
     */
    @JsonSetter("one_way")
    public void setOneWay (Boolean value) { 
        this.oneWay = value;
    }
 
    /** GETTER
     * false — all the prices, true — just the prices, found using the partner marker (recommended)
     */
    @JsonGetter("show_to_affiliates")
    public Boolean getShowToAffiliates ( ) { 
        return this.showToAffiliates;
    }
    
    /** SETTER
     * false — all the prices, true — just the prices, found using the partner marker (recommended)
     */
    @JsonSetter("show_to_affiliates")
    public void setShowToAffiliates (Boolean value) { 
        this.showToAffiliates = value;
    }
 
    /** GETTER
     * the assorting of prices. price — by the price (the default value). For the directions city — city assorting by the price is possible only; route — by the popularity of a route; distance_unit_price — by the price for 1 km.
     */
    @JsonGetter("sorting")
    public String getSorting ( ) { 
        return this.sorting;
    }
    
    /** SETTER
     * the assorting of prices. price — by the price (the default value). For the directions city — city assorting by the price is possible only; route — by the popularity of a route; distance_unit_price — by the price for 1 km.
     */
    @JsonSetter("sorting")
    public void setSorting (String value) { 
        this.sorting = value;
    }
 
    /** GETTER
     * trip_class. 0 — The economy class (the default value); 1 — The business class; 2 — The first class.
     */
    @JsonGetter("trip_class")
    public String getTripClass ( ) { 
        return this.tripClass;
    }
    
    /** SETTER
     * trip_class. 0 — The economy class (the default value); 1 — The business class; 2 — The first class.
     */
    @JsonSetter("trip_class")
    public void setTripClass (String value) { 
        this.tripClass = value;
    }
 
}
 